<?xml version="1.0" encoding="utf-8" ?>
<!--
   1：解决输入到数据库中显示问号乱码的情况：选中要修改的数据库=>右键=>属性=>弹出数据库属性对话框=>选项=>把排序规则设置成：Chinese_PRC_90_CI_AS=>确定
      https://wenku.baidu.com/view/b96f6066caaedd3383c4d3eb.html
   2：NLog配置文件详细可参考官网或者 https://blog.csdn.net/u013667895/article/details/79016059
   3： xmlns="http://www.nlog-project.org/schemas/NLog.xsd" => 默认的命名空间
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" => 这个命名空间里的元素或者属性都必须要以 'xsi:' 这种方式来写
   4：输出到文件参考=> https://www.cnblogs.com/muyeh/p/9788311.html        https://blog.csdn.net/u013667895/article/details/79016059
 -->
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      throwExceptions="false">
  
  <targets>
    <!--输出到文件-->
    <target xsi:type="File" name="filelog" fileName="../../../Logs/logdemo.txt" layout="${machinename}|${longdate}|${level}|${message}|${callsite:methodName=true}|${callsite-linenumber}" encoding="UTF-8"/>
    <!--输出到数据库-->
    <target xsi:type="Database" name="database" 
             connectionString="Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=GameDB;User ID=sa;Password=123456;"
             commandText="insert into LogTable 
              ([LogTime], [LogLevel], [Message], 
              [Host],[ExpType],[MethodName],[LogLine],[ExDetail]) 
              values (@LogTime,@LogLevel, @Message, 
              @Host,@ExpType,@MethodName,@LogLine,@ExDetail)
              ;">
        <parameter name="@Host" layout="${machinename}" />
        <parameter name="@LogTime" layout="${longdate}"/><!--日志发生时间-->
        <parameter name="@LogLevel" layout="${level}"/><!--日志等级-->
        <parameter name="@Message" layout="${message}"/><!--日志信息-->
        <parameter name="@MethodName" layout="${callsite:methodName=true}" /><!--方法名-->
        <parameter name="@ExpType" layout="${exception:format=type}" /><!--异常类型-->
        <parameter name="@LogLine" layout="${callsite-linenumber}" /><!--日志行号-->
        <parameter name="@ExDetail" layout="${exception:format=tostring}" /><!--异常详细信息-->      
      </target>
    
  </targets>

  <rules>
    <!--
       KeyNote:
             1:name => 记录者的名字
             2:minlevel => 最低级别 
             3:maxlevel => 最高级别
             4:level => 单一日志级别
             5:levels => 一些列日志级别，由逗号分开
             6:writeTo => 规则匹配时日志应该被写入的一系列目标，有逗号分开
       如果配单一的日志级别使用注释的即可
            <logger name="*" level="Fatal" writeTo="database"/>
            <logger name="*" level="Warn" writeTo="database"/>
            <logger name="*" level="Debug" writeTo="database"/>
            <logger name="*" level="Error" writeTo="database"/>
            <logger name="*" level="Info" writeTo="database"/>
            <logger name="*" level="Trace" writeTo="database"/>
    -->
    <logger name="*" minlevel="Error" writeTo="database"/>
    <logger name="*" minlevel="Debug" writeTo="filelog"/>
  </rules>
</nlog>